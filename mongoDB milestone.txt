test> use books
switched to db books
books> db.createCollection("Bookstore");
{ ok: 1 }
books> db.Bookstore.insertMany([{book_id:1,btitle:"Leo das",author:"Lokesh",price:"2000.00"},{book_id:2,btitle:"PS",author:"Kalki",price:"5000.00"},{book_id:3,btitle:"Vikram",author:"Lokesh",price:"1500.00"},{book_id:4,btitle:"Maanagaram",author:"Lokesh",price:"1000.00"},{book_id:5,btitle:"History of vioelence",author:"Johndepo",price:"6000.00"},{book_id:6,btitle:"seven brain",author:"Murugadas",price:"2000.00"},{book_id:7,btitle:"Enthiran",author:"Shankar",price:"500.00"},{book_id:8,btitle:"Good Night",author:"Manikandan",price:"1000.00"},{book_id:9,btitle:"Kannur squad",author:"Vignesh",price:"1500.00"},{book_id:10,btitle:"Hridayam",author:"Hariharan",price:"2000.00"}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('6565cb3e659b152483029776'),
    '1': ObjectId('6565cb3e659b152483029777'),
    '2': ObjectId('6565cb3e659b152483029778'),
    '3': ObjectId('6565cb3e659b152483029779'),
    '4': ObjectId('6565cb3e659b15248302977a'),
    '5': ObjectId('6565cb3e659b15248302977b'),
    '6': ObjectId('6565cb3e659b15248302977c'),
    '7': ObjectId('6565cb3e659b15248302977d'),
    '8': ObjectId('6565cb3e659b15248302977e'),
    '9': ObjectId('6565cb3e659b15248302977f')
  }
}
books> db.Bookstore.find().pretty();
[
  {
    _id: ObjectId('6565cb3e659b152483029776'),
    book_id: 1,
    btitle: 'Leo das',
    author: 'Lokesh',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029777'),
    book_id: 2,
    btitle: 'PS',
    author: 'Kalki',
    price: '5000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029778'),
    book_id: 3,
    btitle: 'Vikram',
    author: 'Lokesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029779'),
    book_id: 4,
    btitle: 'Maanagaram',
    author: 'Lokesh',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977a'),
    book_id: 5,
    btitle: 'History of vioelence',
    author: 'Johndepo',
    price: '6000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977b'),
    book_id: 6,
    btitle: 'seven brain',
    author: 'Murugadas',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977c'),
    book_id: 7,
    btitle: 'Enthiran',
    author: 'Shankar',
    price: '500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977d'),
    book_id: 8,
    btitle: 'Good Night',
    author: 'Manikandan',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977e'),
    book_id: 9,
    btitle: 'Kannur squad',
    author: 'Vignesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977f'),
    book_id: 10,
    btitle: 'Hridayam',
    author: 'Hariharan',
    price: '2000.00'
  }
]

----------------------------------------------------------------

1.  Write a MongoDB query to display at least 10 details of the documents of  book_id,
 Btitle, authors in array and price for all the documents in the collection Bookstore.


books> db.Bookstore.find({},{_id:0,book_id:1,btitle:1,author:1,price:1}).limit(10);
[
  { book_id: 1, btitle: 'Leo das', author: 'Lokesh', price: '2000.00' },
  { book_id: 2, btitle: 'PS', author: 'Kalki', price: '5000.00' },
  { book_id: 3, btitle: 'Vikram', author: 'Lokesh', price: '1500.00' },
  {
    book_id: 4,
    btitle: 'Maanagaram',
    author: 'Lokesh',
    price: '1000.00'
  },
  {
    book_id: 5,
    btitle: 'History of vioelence',
    author: 'Johndepo',
    price: '6000.00'
  },
  {
    book_id: 6,
    btitle: 'seven brain',
    author: 'Murugadas',
    price: '2000.00'
  },
  {
    book_id: 7,
    btitle: 'Enthiran',
    author: 'Shankar',
    price: '500.00'
  },
  {
    book_id: 8,
    btitle: 'Good Night',
    author: 'Manikandan',
    price: '1000.00'
  },
  {
    book_id: 9,
    btitle: 'Kannur squad',
    author: 'Vignesh',
    price: '1500.00'
  },
  {
    book_id: 10,
    btitle: 'Hridayam',
    author: 'Hariharan',
    price: '2000.00'
  }
]

--------------------------------------------------------------

2. Write a MongoDB query to display the fields Btitle,  authors and price but exclude the 
bookid for all the documents in the collection Bookstore. 

books> db.Bookstore.find({},{_id:0,btitle:1,author:1,price:1});
[
  { btitle: 'Leo das', author: 'Lokesh', price: '2000.00' },
  { btitle: 'PS', author: 'Kalki', price: '5000.00' },
  { btitle: 'Vikram', author: 'Lokesh', price: '1500.00' },
  { btitle: 'Maanagaram', author: 'Lokesh', price: '1000.00' },
  {
    btitle: 'History of vioelence',
    author: 'Johndepo',
    price: '6000.00'
  },
  { btitle: 'seven brain', author: 'Murugadas', price: '2000.00' },
  { btitle: 'Enthiran', author: 'Shankar', price: '500.00' },
  { btitle: 'Good Night', author: 'Manikandan', price: '1000.00' },
  { btitle: 'Kannur squad', author: 'Vignesh', price: '1500.00' },
  { btitle: 'Hridayam', author: 'Hariharan', price: '2000.00' }
]

----------------------------------------------------------------

3. Write a MongoDB query to display the first 3 books based on similar authors.

books> db.Bookstore.find().sort({author:1}),limit(3);
ReferenceError: limit is not defined
books> db.Bookstore.find().sort({author:1}).limit(3);
[
  {
    _id: ObjectId('6565cb3e659b15248302977f'),
    book_id: 10,
    btitle: 'Hridayam',
    author: 'Hariharan',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977a'),
    book_id: 5,
    btitle: 'History of vioelence',
    author: 'Johndepo',
    price: '6000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029777'),
    book_id: 2,
    btitle: 'PS',
    author: 'Kalki',
    price: '5000.00'
  }
]

---------------------------------------------------------------------

4. Write a MongoDB query to find the book price more than 1500.

books> db.Bookstore.find({price:'1500.00'});
[
  {
    _id: ObjectId('6565cb3e659b152483029778'),
    book_id: 3,
    btitle: 'Vikram',
    author: 'Lokesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977e'),
    book_id: 9,
    btitle: 'Kannur squad',
    author: 'Vignesh',
    price: '1500.00'
  }
]
books> db.Bookstore.find({price:{$gt:'1500.00'}});
[
  {
    _id: ObjectId('6565cb3e659b152483029776'),
    book_id: 1,
    btitle: 'Leo das',
    author: 'Lokesh',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029777'),
    book_id: 2,
    btitle: 'PS',
    author: 'Kalki',
    price: '5000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977a'),
    book_id: 5,
    btitle: 'History of vioelence',
    author: 'Johndepo',
    price: '6000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977b'),
    book_id: 6,
    btitle: 'seven brain',
    author: 'Murugadas',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977c'),
    book_id: 7,
    btitle: 'Enthiran',
    author: 'Shankar',
    price: '500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977f'),
    book_id: 10,
    btitle: 'Hridayam',
    author: 'Hariharan',
    price: '2000.00'
  }
]

-----------------------------------------------------------------

5. Write a MongoDB query to find the book title who's price is  more than 800 but less
 than 2000

books> db.Bookstore.find({price:{$gt:'800.00'},price:{$lt:'2000.00'}});
[
  {
    _id: ObjectId('6565cb3e659b152483029778'),
    book_id: 3,
    btitle: 'Vikram',
    author: 'Lokesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029779'),
    book_id: 4,
    btitle: 'Maanagaram',
    author: 'Lokesh',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977d'),
    book_id: 8,
    btitle: 'Good Night',
    author: 'Manikandan',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977e'),
    book_id: 9,
    btitle: 'Kannur squad',
    author: 'Vignesh',
    price: '1500.00'
  }
]
books> db.Bookstore.find({price:{$gt:'800.00'},price:{$lt:'2000.00'}},{btitle:1});
[
  { _id: ObjectId('6565cb3e659b152483029778'), btitle: 'Vikram' },
  { _id: ObjectId('6565cb3e659b152483029779'), btitle: 'Maanagaram' },
  { _id: ObjectId('6565cb3e659b15248302977d'), btitle: 'Good Night' },
  { _id: ObjectId('6565cb3e659b15248302977e'), btitle: 'Kannur squad' }
]

------------------------------------------------------------------

6. Write a MongoDB query to arrange the book name of the bookstore in ascending 
order along with all the columns. 

books> db.Bookstore.find().sort({btitle:1});
[
  {
    _id: ObjectId('6565cb3e659b15248302977c'),
    book_id: 7,
    btitle: 'Enthiran',
    author: 'Shankar',
    price: '500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977d'),
    book_id: 8,
    btitle: 'Good Night',
    author: 'Manikandan',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977a'),
    book_id: 5,
    btitle: 'History of vioelence',
    author: 'Johndepo',
    price: '6000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977f'),
    book_id: 10,
    btitle: 'Hridayam',
    author: 'Hariharan',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977e'),
    book_id: 9,
    btitle: 'Kannur squad',
    author: 'Vignesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029776'),
    book_id: 1,
    btitle: 'Leo das',
    author: 'Lokesh',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029779'),
    book_id: 4,
    btitle: 'Maanagaram',
    author: 'Lokesh',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029777'),
    book_id: 2,
    btitle: 'PS',
    author: 'Kalki',
    price: '5000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029778'),
    book_id: 3,
    btitle: 'Vikram',
    author: 'Lokesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977b'),
    book_id: 6,
    btitle: 'seven brain',
    author: 'Murugadas',
    price: '2000.00'
  }
]

-----------------------------------------------------------------

7.Write a MongoDB query to arrange the book name of the bookstore in 
ascending order along with all the column

books> db.Bookstore.find().sort({btitle:1});
[
  {
    _id: ObjectId('6565cb3e659b15248302977c'),
    book_id: 7,
    btitle: 'Enthiran',
    author: 'Shankar',
    price: '500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977d'),
    book_id: 8,
    btitle: 'Good Night',
    author: 'Manikandan',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977a'),
    book_id: 5,
    btitle: 'History of vioelence',
    author: 'Johndepo',
    price: '6000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977f'),
    book_id: 10,
    btitle: 'Hridayam',
    author: 'Hariharan',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977e'),
    book_id: 9,
    btitle: 'Kannur squad',
    author: 'Vignesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029776'),
    book_id: 1,
    btitle: 'Leo das',
    author: 'Lokesh',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029779'),
    book_id: 4,
    btitle: 'Maanagaram',
    author: 'Lokesh',
    price: '1000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029777'),
    book_id: 2,
    btitle: 'PS',
    author: 'Kalki',
    price: '5000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029778'),
    book_id: 3,
    btitle: 'Vikram',
    author: 'Lokesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b15248302977b'),
    book_id: 6,
    btitle: 'seven brain',
    author: 'Murugadas',
    price: '2000.00'
  }
]

--------------------------------------------------------------

8. Write a MongoDB query to know whether the author in the authors list

books> db.Bookstore.find({author:"Lokesh"});
[
  {
    _id: ObjectId('6565cb3e659b152483029776'),
    book_id: 1,
    btitle: 'Leo das',
    author: 'Lokesh',
    price: '2000.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029778'),
    book_id: 3,
    btitle: 'Vikram',
    author: 'Lokesh',
    price: '1500.00'
  },
  {
    _id: ObjectId('6565cb3e659b152483029779'),
    book_id: 4,
    btitle: 'Maanagaram',
    author: 'Lokesh',
    price: '1000.00'
  }
]

---------------------------------------------------------------

9.Write a MongoDB query to update & increase the book price Rs.500 in all
 book name as "MongoDB Practice".

books> db.Bookstore.updateMany({btitle:"Vikram"},{$inc:{price:500}});
MongoServerError: Cannot apply $inc to a value of non-numeric type. {_id: ObjectId('6565cb3e659b152483029778')} has the field 'price' of non-numeric type string
books> db.Bookstore.updateMany({btitle:"Vikram"},{$inc:{price:'500.00'}});
MongoServerError: Cannot increment with non-numeric argument: {price: "500.00"}
books> db.Bookstore.updateMany({btitle:"Leo das"},{$inc:{price:500}});
MongoServerError: Cannot apply $inc to a value of non-numeric type. {_id: ObjectId('6565cb3e659b152483029776')} has the field 'price' of non-numeric type string

----------------------------------------------------------------

10. Write a MongoDB query to use Update modifiers
 ($set, $push,  $pull,  $setOnInsert,$upsert) in bookstore.

books> db.Bookstore.update({Btitle:"VikramToUpdate"},{$set:{price:1000}});
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}

-------------------------------------------------------------------
